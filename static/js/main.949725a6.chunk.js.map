{"version":3,"sources":["components/BreakInterval.js","components/SessionInterval.js","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["BreakInterval","breakInterval","increaseBreak","decreaseBreak","className","id","onClick","SessionInterval","sessionInterval","increaseSession","decreaseSession","Timer","breakLength","sessionLength","reset","useState","isSession","setIsSession","second","minute","timer","setTimer","currentIntervalId","setCurrentIntervalId","isPlay","setIsPlay","useEffect","audio","document","getElementById","decreaseTimer","console","log","play","intervalId","setInterval","clearInterval","pause","currentTime","src","App","setBreakLength","setSessionLength","onIncreaseBreakLength","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.949725a6.chunk.js","sourcesContent":["import \"./BreakInterval.css\"\n\nconst BreakInterval = ( {breakInterval, increaseBreak, decreaseBreak}) => {\n  return (\n    <div className=\"interval-container\"> \n      <h5>Break Length</h5>\n      <div id=\"container1\">\n        <button id=\"break-decrement\" onClick={decreaseBreak}>Down</button>\n        <p id=\"break-length\" className=\"interval-length\">{breakInterval}</p>\n        <button  id=\"break-increment\" onClick={increaseBreak}>Up</button>\n      </div>\n    </div>\n  )\n}\n\nexport default BreakInterval;","import \"./SessionInterval.css\"\n\nconst SessionInterval = ( {sessionInterval, increaseSession, decreaseSession}) => {\n  return (\n    <div className=\"interval-container\"> \n      <h5>Session Length</h5>\n      <div id=\"container2\">\n        <button id=\"session-decrement\" onClick={decreaseSession}>Down</button>\n        <p id=\"session-length\" className=\"interval-length\">{sessionInterval}</p>\n        <button id=\"session-increment\" onClick={increaseSession}>Up</button>\n      </div>\n    </div>\n  )\n}\n\nexport default SessionInterval;","import { useEffect, useState } from \"react\";\nimport \"./Timer.css\"\n\nconst Timer = ({breakLength, sessionLength, reset}) => {\n  const [ isSession, setIsSession ] = useState(true);\n  const [ timer, setTimer ] = useState({second: 0, minute: 25});\n  const [ currentIntervalId, setCurrentIntervalId] = useState(0);\n  const [isPlay, setIsPlay] = useState(false);\n\n  useEffect(() => {\n    setTimer({second: 0, minute: sessionLength});\n  }, [sessionLength]);\n\n\n  const handlePlayAndStop = () => {\n    if (isPlay === false) {\n      let intervalId = setInterval(decreaseTimer, 20);\n      setIsPlay(true);\n      setCurrentIntervalId(intervalId);\n    } else {\n      clearInterval(currentIntervalId);\n      setIsPlay(false);\n      }\n  };\n  const audio = document.getElementById(\"beep\");\n\n  const decreaseTimer = () => {\n    console.log('decreaseTimer');\n    setTimer(timer => {\n      switch (timer.second) {\n        case 0: \n          if (timer.minute === 0) {\n            \n            audio.play();\n            setIsSession(isSession => !isSession);\n            console.log()\n            if (!isSession) {\n              setTimer({second: 0, minute: sessionLength});\n            } else {\n              setTimer({second: 0, minute: breakLength});\n            }\n          }\n          return {\n            second: 59, \n            minute: timer.minute - 1\n          };\n        default: \n          return {\n            second: timer.second - 1, \n            minute: timer.minute\n          }; \n      } \n    });\n\n  };\n\n  const handleRefresh = () => {\n    clearInterval(currentIntervalId);\n    setCurrentIntervalId(0);\n    reset();\n    setTimer({second: 0, minute: 25});\n    setIsSession(true);\n    setIsPlay(false);\n    audio.pause();\n    audio.currentTime = 0;\n  };\n\n  return (\n    <div id=\"\" > \n      <section className=\"timer-container\">\n        <h3>{isSession === true ? \"Session\" : \"Break\"}</h3>\n        <div id=\"time-left\">\n          <span className=\"timer\">\n            {timer.minute === 0 \n            ? \"00\" \n            : timer.minute >= 10\n            ? timer.minute\n            : \"0\" + timer.minute\n            }\n          </span>\n          <span className=\"timer\">:</span>\n          <span className=\"timer\">\n            {timer.second === 0 \n            ? \"00\" \n            : timer.second < 10\n            ? \"0\" + timer.second\n            : timer.second}    \n          </span>\n        </div>\n        \n      </section>\n      <section className=\"timer-actions\"> \n        <button id=\"start_stop\" onClick={handlePlayAndStop}>Play/Stop</button>    \n        <button id=\"reset\" onClick={handleRefresh}>Refresh</button>  \n      </section>\n\n      <audio \n        id=\"beep\" \n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n      />\n    </div>\n  );\n}\n\nexport default Timer;","import './App.css';\nimport React, { useState } from \"react\";\nimport BreakInterval from \"./components/BreakInterval\";\nimport SessionInterval from \"./components/SessionInterval\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n\n  const onIncreaseBreakLength = () => {\n    if (breakLength < 60) {\n      setBreakLength(breakLength => breakLength + 1);\n    }\n  };\n\n  const onDecreaseBreakLength = () => {\n    if (breakLength > 1) {\n      setBreakLength(breakLength => breakLength - 1);\n    }\n  };\n\n  const onIncreaseSessionLength = () => {\n    if (sessionLength < 60) {\n      setSessionLength(sessionLength => sessionLength + 1);\n    }\n  };\n\n  const onDecreaseSessionLength = () => {\n    if (sessionLength > 1) {\n      setSessionLength(sessionLength => sessionLength - 1);\n    }\n  };\n\n  const onReset = () => {\n    setSessionLength(25);\n    setBreakLength(5);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Pomodoro Clock</h1>\n      <div className=\"row\">\n        <div id=\"break-label\" className=\"col\">\n          <BreakInterval \n            breakInterval={breakLength} \n            increaseBreak={onIncreaseBreakLength} \n            decreaseBreak={onDecreaseBreakLength} \n          />\n        </div>\n        \n        <div id=\"session-label\" className=\"col\">\n          <SessionInterval \n            sessionInterval={sessionLength}  \n            increaseSession={onIncreaseSessionLength} \n            decreaseSession={onDecreaseSessionLength} \n          />\n        </div>    \n      </div>\n\n      <div className=\"row\">\n          <div id=\"timer-label\" className=\"col\">\n            <Timer \n              breakLength = {breakLength}\n              sessionLength = {sessionLength}\n              increaseBreak = {onIncreaseBreakLength}\n              reset = {onReset}\n            />\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}